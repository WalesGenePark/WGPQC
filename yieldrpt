#!/usr/bin/perl -w

no warnings 'uninitialized';

use Data::Dumper;
use File::Find::Rule;
use File::Path;
use File::Path qw(make_path);
use Cwd;
use List::MoreUtils qw(uniq);
use Term::ANSIColor qw(:constants);
local $Term::ANSIColor::AUTORESET = 1;
use Getopt::Long;
$|++;

my $QCdir = getcwd();

# Development directories
#$QCdir = "/wgp1/wgp/sequencing/QC/illumina_hiseq/WGP/2018_03_21_QC/";
#$QCdir = "/wgp1/wgp/sequencing/QC/illumina/WGP/2017_06_01_QC/";


# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Get list of results.properties files
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

#print CYAN "Finding results.properties in QC directory ... \n";

print "Finding '*results.properties' files in '$QCdir' ... ";

# find all the subdirectories of a given directory
#my @subdirs = File::Find::Rule->directory->in( $QCdir );

$cmd = "find $QCdir -name \"*results.properties\"";
@QCfiles = `$cmd`;
chomp(@QCfiles);

@QCfiles = uniq @QCfiles;

$numqc = @QCfiles;
if($numqc gt 0){ 
	print GREEN "$numqc files\n";	
} else {
	print RED "0\n";
	exit(1);
}



# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Get multipliers
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

$cmd = "find $QCdir -maxdepth 1 -name \"index_*html\"";
@indexfiles = `$cmd`;
chomp(@indexfiles);

$multipliers = ();

foreach $index(@indexfiles){
	#print YELLOW "$index\n";
	$index =~ m/index_(.*).html/;
	$genome = $1;
	
	$cmd = "cat $index | grep data";
	@retval = `$cmd`;
	$tmp = $retval[0];
	if($tmp =~ m/<li>Analysis based on (\d+) % of the available data.<\/li>/) { $frac = $1; }
	else {$frac = 100;}
	$multipliers{$genome} = $frac;
	
	
	
	print "Fraction in '$genome' QC file identified as ... ";
	print GREEN "$frac%\n";
}


# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Read data from results.properties files
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

@samples = ();
@lanes = ();
%QCdata = ();

#./QC_hg19/Sample_A10-D-saliva.Lane2/Sample_A10-D-saliva.Lane2.results.properties

foreach $QCfile (@QCfiles){
	$sample=""; $lane=""; $r1_yield=0; $r2_yield=0; $r1_reads=0; $r2_reads=0;

	# Get genome
	$QCfile =~ m/\/QC_([^\/]+)\//;
	$genome = $1;
	if(exists($multipliers{$genome})){
		$multiplier = $multipliers{$genome} / 100;
	} else {
		$multiplier = 1;
	}
	#print YELLOW "$QCfile\t$genome\t$multiplier\n";

	# Read in file
	open INFILE, "$QCfile" ; 
	@data = <INFILE> ; 
	close INFILE ;
	chomp(@data);

	foreach $line (@data){
		if($line =~ m/r1.raw.data.yield=(\d+)$/){ $r1_yield = $1; }
		if($line =~ m/r2.raw.data.yield=(\d+)$/){ $r2_yield = $1; }
		if($line =~ m/r1.read.count=(\d+)$/){ $r1_reads = $1; }
		if($line =~ m/r2.read.count=(\d+)$/){ $r2_reads = $1; }
	}
	

	
	$QCfile =~ m/\/([^\/]+)\/[^\/]+$/;
	$sample = $1;
	#Sample_A08-C-high-swab.Lane2/Sample_A08-C-high-swab.Lane2.results.properties
	if($sample =~ m/\.(Lane\d+)$/){
		$lane = $1;
		$sample =~ s/\.(Lane\d+)$//;
		$sample =~ s/^Sample_//;
	} else {
		$lane = "Lane1";
	}
	
	$yield = (1/$multiplier)*($r1_yield + $r2_yield);
	$reads = (1/$multiplier)*($r1_reads);
	
	if($QCfile =~ m/QC_phiX/ && $QCfile =~ m/Undetermined/){
 		#print CYAN "$QCfile\n";
		$sl = "phiX-Undetermined.$lane";
		$QCdata{$sl}{'yield'} = $QCdata{$sl}{'yield'} + $yield;
		$QCdata{$sl}{'reads'} = $QCdata{$sl}{'reads'} + $reads;	
		push(@samples, "phiX-Undetermined");	
	} elsif ($QCfile !~ m/Undetermined/) {
		$sl = "$sample.$lane";
		$QCdata{$sl}{'yield'} = $yield;
		$QCdata{$sl}{'reads'} = $reads;
		push(@samples, $sample);
		push(@lanes, $lane);
	}
	
		
}

@samples = uniq(@samples);
@samples = sort(@samples);
@lanes = uniq(@lanes);
@lanes = sort(@lanes);

#print Dumper (@samples);
#print Dumper (@lanes);
#print Dumper (%QCdata);

print "Determining number of samples ... ";
print GREEN scalar(@samples) ."\n";
print "Determining number of lanes ... ";
print GREEN scalar(@lanes) ."\n";


# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Get totals
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

%readstotals = ();
%yieldtotals = ();

foreach $lane (@lanes){
	$readstotal = 0;
	$yieldtotal = 0;
	foreach $sample (@samples){
		$sl = "$sample.$lane";
		if($QCdata{$sl}{'reads'}){ $readstotal = $readstotal + $QCdata{$sl}{'reads'}; }
		if($QCdata{$sl}{'yield'}){ $yieldtotal = $yieldtotal + $QCdata{$sl}{'yield'}; }
	}
	$readstotals{$lane} = $readstotal;
	$yieldtotals{$lane} = $yieldtotal;
}

# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Create outputs
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

$filename = $QCdir . "/yieldreport.xlsx";

print "Writing outputs to '$filename' ... ";

use Excel::Writer::XLSX;
 
my $workbook  = Excel::Writer::XLSX->new( "$filename" );
my $worksheet = $workbook->add_worksheet();

my $header = $workbook->add_format(       
	bold => 1,
    border => 1,
	bg_color => 'red',
	fg_color => 'white',
);

my $cell = $workbook->add_format(       
	bold => 0,
    border => 1,
	color => 'black',
	fg_color => 'white',
);


$row = 0;
$col = 0;
#print CYAN "Sample";
$worksheet->write($row, $col, "Sample", $header); $col++;
foreach $lane (@lanes){
	#print CYAN "\t".$lane."_reads\t".$lane."_yield\t%";
	$worksheet->write($row, $col,  $lane."_reads", $header);	$col++;	
	$worksheet->write($row, $col,  $lane."_yield", $header);	$col++;		
 	$worksheet->write($row, $col,  "%", $header); $col++;	
}
#print CYAN "\n";


$row++;
foreach $sample (@samples){
	$col = 0;
	#print CYAN "$sample";
	$worksheet->write($row, $col,  $sample, $cell);	
	$col++;		
	$rtotal = 0;
	$ytotal = 0;

	foreach $lane (@lanes){
		$sl = "$sample.$lane";
		#print MAGENTA "$sl\n";
		if($QCdata{$sl}{'reads'}){ 
			$reads = $QCdata{$sl}{'reads'}; 
			$rtotal = $rtotal + $reads;
			$pc = $reads / $readstotals{$lane} * 100;
			$reads = sprintf "%.1f", $reads/1000000;
			$pc = sprintf "%.1f", $pc;
		} else { 
			$reads = "";
			$pc = "";
		}
		if($QCdata{$sl}{'yield'}){ 
			$yield = $QCdata{$sl}{'yield'}; 
			$ytotal = $ytotal + $yield;
			$yield = sprintf "%.1f", $yield/1000000;	
		} else { $yield = "" };


		#print CYAN "\t$reads\t$yield";
		#print YELLOW "\t$pc";
		$worksheet->write($row, $col, $reads, $cell); $col++;	
		$worksheet->write($row, $col, $yield, $cell );	$col++;	
		$worksheet->write($row, $col, $pc, $cell); $col++;						
	}
	#print CYAN "\n";
	$row++;
}

$col=0;
$worksheet->write($row, $col, "TOTAL", $cell); $col++;	
foreach $lane (@lanes){
	$reads = sprintf "%.1f", $readstotals{$lane}/1000000;	
	$yield = sprintf "%.1f", $yieldtotals{$lane}/1000000;	

	#print MAGENTA "\t";
	#print MAGENTA "\t$yield";
	#print MAGENTA "\t";

	$worksheet->write($row, $col, $reads, $cell); $col++;	
	$worksheet->write($row, $col, $yield, $cell );	$col++;	
	$worksheet->write($row, $col, "", $cell );	$col++;		

}
#print CYAN "\n";


$workbook->close;
	
print GREEN "DONE\n";
